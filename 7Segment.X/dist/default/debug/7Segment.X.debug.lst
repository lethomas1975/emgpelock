

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat May 14 17:43:55 2022

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    15  0000                     _LATCbits	set	3979
    16  0000                     _LATEbits	set	3981
    17  0000                     _TRISCbits	set	3988
    18  0000                     _TRISEbits	set	3990
    19  0000                     _TRISC6	set	31910
    20  0000                     _TRISC7	set	31911
    21  0000                     _ADCON0bits	set	4034
    22  0000                     _ADCON1	set	4033
    23  0000                     _CMCON	set	4020
    24  0000                     _RCSTA	set	4011
    25  0000                     _SPBRG	set	4015
    26  0000                     _TXSTA	set	4012
    27  0000                     _INTCON2	set	4081
    28                           
    29                           ; #config settings
    30  0000                     
    31                           	psect	cinit
    32  007B0C                     __pcinit:
    33                           	opt stack 0
    34  007B0C                     start_initialization:
    35                           	opt stack 0
    36  007B0C                     __initialization:
    37                           	opt stack 0
    38  007B0C                     end_of_initialization:
    39                           	opt stack 0
    40  007B0C                     __end_of__initialization:
    41                           	opt stack 0
    42  007B0C  0E00               	movlw	low (__Lmediumconst shr (0+16))
    43  007B0E  6EF8               	movwf	tblptru,c
    44  007B10  0100               	movlb	0
    45  007B12  EFAF  F03D         	goto	_main	;jump to C main() function
    46                           tblptru	equ	0xFF8
    47                           
    48                           	psect	cstackCOMRAM
    49  000001                     __pcstackCOMRAM:
    50                           	opt stack 0
    51  000001                     ?___awdiv:
    52                           	opt stack 0
    53  000001                     setSegmentByBit@d:
    54                           	opt stack 0
    55  000001                     ___awdiv@dividend:
    56                           	opt stack 0
    57                           
    58                           ; 2 bytes @ 0x0
    59  000001                     	ds	1
    60  000002                     setSegmentByBit@g:
    61                           	opt stack 0
    62                           
    63                           ; 1 bytes @ 0x1
    64  000002                     	ds	1
    65  000003                     setSegmentByBit@a:
    66                           	opt stack 0
    67  000003                     ___awdiv@divisor:
    68                           	opt stack 0
    69                           
    70                           ; 2 bytes @ 0x2
    71  000003                     	ds	1
    72  000004                     setSevenSegment@display:
    73                           	opt stack 0
    74                           
    75                           ; 2 bytes @ 0x3
    76  000004                     	ds	1
    77  000005                     ___awdiv@counter:
    78                           	opt stack 0
    79                           
    80                           ; 1 bytes @ 0x4
    81  000005                     	ds	1
    82  000006                     ??_setSevenSegment:
    83  000006                     ___awdiv@sign:
    84                           	opt stack 0
    85                           
    86                           ; 1 bytes @ 0x5
    87  000006                     	ds	1
    88  000007                     ___awdiv@quotient:
    89                           	opt stack 0
    90                           
    91                           ; 2 bytes @ 0x6
    92  000007                     	ds	2
    93  000009                     delayInMs@ms:
    94                           	opt stack 0
    95                           
    96                           ; 2 bytes @ 0x8
    97  000009                     	ds	2
    98  00000B                     ??_delayInMs:
    99                           
   100                           ; 0 bytes @ 0xA
   101  00000B                     	ds	1
   102  00000C                     delayInMs@i:
   103                           	opt stack 0
   104                           
   105                           ; 2 bytes @ 0xB
   106  00000C                     	ds	2
   107  00000E                     main@i:
   108                           	opt stack 0
   109                           
   110                           ; 2 bytes @ 0xD
   111  00000E                     	ds	2
   112                           tblptru	equ	0xFF8
   113                           
   114 ;;
   115 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   116 ;;
   117 ;; *************** function _main *****************
   118 ;; Defined at:
   119 ;;		line 11 in file "7s.c"
   120 ;; Parameters:    Size  Location     Type
   121 ;;		None
   122 ;; Auto vars:     Size  Location     Type
   123 ;;  i               2   13[COMRAM] int 
   124 ;; Return value:  Size  Location     Type
   125 ;;		None               void
   126 ;; Registers used:
   127 ;;		wreg, status,2, status,0, cstack
   128 ;; Tracked objects:
   129 ;;		On entry : 0/0
   130 ;;		On exit  : 0/0
   131 ;;		Unchanged: 0/0
   132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   133 ;;      Params:         0       0       0       0       0       0       0       0       0
   134 ;;      Locals:         2       0       0       0       0       0       0       0       0
   135 ;;      Temps:          0       0       0       0       0       0       0       0       0
   136 ;;      Totals:         2       0       0       0       0       0       0       0       0
   137 ;;Total ram usage:        2 bytes
   138 ;; Hardware stack levels required when called:    2
   139 ;; This function calls:
   140 ;;		_delayInMs
   141 ;;		_init
   142 ;;		_setSevenSegment
   143 ;; This function is called by:
   144 ;;		Startup code after reset
   145 ;; This function uses a non-reentrant model
   146 ;;
   147                           
   148                           	psect	text0
   149  007B5E                     __ptext0:
   150                           	opt stack 0
   151  007B5E                     _main:
   152                           	opt stack 29
   153                           
   154                           ;7s.c: 12: init();
   155                           
   156                           ;incstack = 0
   157  007B5E  EC9C  F03D         	call	_init	;wreg free
   158  007B62                     l900:
   159                           
   160                           ;7s.c: 15: for (int i = 0; i < 4; i++) {
   161  007B62  0E00               	movlw	0
   162  007B64  6E0F               	movwf	main@i+1,c
   163  007B66  0E00               	movlw	0
   164  007B68  6E0E               	movwf	main@i,c
   165  007B6A                     l902:
   166  007B6A  BE0F               	btfsc	main@i+1,7,c
   167  007B6C  D006               	goto	l906
   168  007B6E  500F               	movf	main@i+1,w,c
   169  007B70  E1F8               	bnz	l900
   170  007B72  0E04               	movlw	4
   171  007B74  5C0E               	subwf	main@i,w,c
   172  007B76  B0D8               	btfsc	status,0,c
   173  007B78  D7F4               	goto	l900
   174  007B7A                     l906:
   175                           
   176                           ;7s.c: 16: setSevenSegment(i);
   177  007B7A  C00E  F004         	movff	main@i,setSevenSegment@display
   178  007B7E  C00F  F005         	movff	main@i+1,setSevenSegment@display+1
   179  007B82  ECCC  F03D         	call	_setSevenSegment	;wreg free
   180                           
   181                           ;7s.c: 17: delayInMs(100);
   182  007B86  0E00               	movlw	0
   183  007B88  6E0A               	movwf	delayInMs@ms+1,c
   184  007B8A  0E64               	movlw	100
   185  007B8C  6E09               	movwf	delayInMs@ms,c
   186  007B8E  EC00  F03E         	call	_delayInMs	;wreg free
   187  007B92  4A0E               	infsnz	main@i,f,c
   188  007B94  2A0F               	incf	main@i+1,f,c
   189  007B96  D7E9               	goto	l902
   190  007B98                     __end_of_main:
   191                           	opt stack 0
   192                           tblptru	equ	0xFF8
   193                           status	equ	0xFD8
   194                           
   195 ;; *************** function _setSevenSegment *****************
   196 ;; Defined at:
   197 ;;		line 47 in file "../eLock.X/7seg.c"
   198 ;; Parameters:    Size  Location     Type
   199 ;;  display         2    3[COMRAM] int 
   200 ;; Auto vars:     Size  Location     Type
   201 ;;		None
   202 ;; Return value:  Size  Location     Type
   203 ;;		None               void
   204 ;; Registers used:
   205 ;;		wreg, status,2, status,0, cstack
   206 ;; Tracked objects:
   207 ;;		On entry : 0/0
   208 ;;		On exit  : 0/0
   209 ;;		Unchanged: 0/0
   210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   211 ;;      Params:         2       0       0       0       0       0       0       0       0
   212 ;;      Locals:         0       0       0       0       0       0       0       0       0
   213 ;;      Temps:          2       0       0       0       0       0       0       0       0
   214 ;;      Totals:         4       0       0       0       0       0       0       0       0
   215 ;;Total ram usage:        4 bytes
   216 ;; Hardware stack levels used:    1
   217 ;; Hardware stack levels required when called:    1
   218 ;; This function calls:
   219 ;;		_setSegmentByBit
   220 ;; This function is called by:
   221 ;;		_main
   222 ;; This function uses a non-reentrant model
   223 ;;
   224                           
   225                           	psect	text1
   226  007B98                     __ptext1:
   227                           	opt stack 0
   228  007B98                     _setSevenSegment:
   229                           	opt stack 29
   230                           
   231                           ;7seg.c: 48: switch (display) {
   232                           
   233                           ;incstack = 0
   234  007B98  D020               	goto	l882
   235  007B9A                     l872:
   236                           
   237                           ;7seg.c: 50: setSegmentByBit(1, 0, 0);
   238  007B9A  0E00               	movlw	0
   239  007B9C  6E01               	movwf	setSegmentByBit@d,c
   240  007B9E  0E00               	movlw	0
   241  007BA0  6E02               	movwf	setSegmentByBit@g,c
   242  007BA2  0E01               	movlw	1
   243  007BA4  EC8B  F03D         	call	_setSegmentByBit
   244                           
   245                           ;7seg.c: 51: break;
   246  007BA8  0012               	return	
   247  007BAA                     l874:
   248                           
   249                           ;7seg.c: 53: setSegmentByBit(1, 0, 1);
   250  007BAA  0E00               	movlw	0
   251  007BAC  6E01               	movwf	setSegmentByBit@d,c
   252  007BAE  0E01               	movlw	1
   253  007BB0  6E02               	movwf	setSegmentByBit@g,c
   254  007BB2  0E01               	movlw	1
   255  007BB4  EC8B  F03D         	call	_setSegmentByBit
   256                           
   257                           ;7seg.c: 54: break;
   258  007BB8  0012               	return	
   259  007BBA                     l876:
   260                           
   261                           ;7seg.c: 56: setSegmentByBit(1, 1, 1);
   262  007BBA  0E01               	movlw	1
   263  007BBC  6E01               	movwf	setSegmentByBit@d,c
   264  007BBE  0E01               	movlw	1
   265  007BC0  6E02               	movwf	setSegmentByBit@g,c
   266  007BC2  0E01               	movlw	1
   267  007BC4  EC8B  F03D         	call	_setSegmentByBit
   268                           
   269                           ;7seg.c: 57: break;
   270  007BC8  0012               	return	
   271  007BCA                     l878:
   272                           
   273                           ;7seg.c: 59: setSegmentByBit(0, 0, 0);
   274  007BCA  0E00               	movlw	0
   275  007BCC  6E01               	movwf	setSegmentByBit@d,c
   276  007BCE  0E00               	movlw	0
   277  007BD0  6E02               	movwf	setSegmentByBit@g,c
   278  007BD2  0E00               	movlw	0
   279  007BD4  EC8B  F03D         	call	_setSegmentByBit
   280                           
   281                           ;7seg.c: 61: }
   282                           
   283                           ;7seg.c: 60: break;
   284  007BD8  0012               	return	
   285  007BDA                     l882:
   286  007BDA  C004  F006         	movff	setSevenSegment@display,??_setSevenSegment
   287  007BDE  C005  F007         	movff	setSevenSegment@display+1,??_setSevenSegment+1
   288                           
   289                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   290                           ; Switch size 1, requested type "space"
   291                           ; Number of cases is 1, Range of values is 0 to 0
   292                           ; switch strategies available:
   293                           ; Name         Instructions Cycles
   294                           ; simple_byte            4     3 (average)
   295                           ;	Chosen strategy is simple_byte
   296  007BE2  5007               	movf	??_setSevenSegment+1,w,c
   297  007BE4  0A00               	xorlw	0	; case 0
   298  007BE6  A4D8               	btfss	status,2,c
   299  007BE8  D7F0               	goto	l878
   300                           
   301                           ; Switch size 1, requested type "space"
   302                           ; Number of cases is 3, Range of values is 0 to 2
   303                           ; switch strategies available:
   304                           ; Name         Instructions Cycles
   305                           ; simple_byte           10     6 (average)
   306                           ;	Chosen strategy is simple_byte
   307  007BEA  5006               	movf	??_setSevenSegment,w,c
   308  007BEC  0A00               	xorlw	0	; case 0
   309  007BEE  B4D8               	btfsc	status,2,c
   310  007BF0  D7D4               	goto	l872
   311  007BF2  0A01               	xorlw	1	; case 1
   312  007BF4  B4D8               	btfsc	status,2,c
   313  007BF6  D7D9               	goto	l874
   314  007BF8  0A03               	xorlw	3	; case 2
   315  007BFA  B4D8               	btfsc	status,2,c
   316  007BFC  D7DE               	goto	l876
   317  007BFE  D7E5               	goto	l878
   318  007C00                     __end_of_setSevenSegment:
   319                           	opt stack 0
   320                           tblptru	equ	0xFF8
   321                           status	equ	0xFD8
   322                           
   323 ;; *************** function _setSegmentByBit *****************
   324 ;; Defined at:
   325 ;;		line 28 in file "../eLock.X/7seg.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;  a               1    wreg     unsigned char 
   328 ;;  d               1    0[COMRAM] unsigned char 
   329 ;;  g               1    1[COMRAM] unsigned char 
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  a               1    2[COMRAM] unsigned char 
   332 ;; Return value:  Size  Location     Type
   333 ;;		None               void
   334 ;; Registers used:
   335 ;;		wreg
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   341 ;;      Params:         2       0       0       0       0       0       0       0       0
   342 ;;      Locals:         1       0       0       0       0       0       0       0       0
   343 ;;      Temps:          0       0       0       0       0       0       0       0       0
   344 ;;      Totals:         3       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:        3 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; This function calls:
   348 ;;		Nothing
   349 ;; This function is called by:
   350 ;;		_setSevenSegment
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text2
   355  007B16                     __ptext2:
   356                           	opt stack 0
   357  007B16                     _setSegmentByBit:
   358                           	opt stack 29
   359                           
   360                           ;incstack = 0
   361                           ;setSegmentByBit@a stored from wreg
   362  007B16  6E03               	movwf	setSegmentByBit@a,c
   363                           
   364                           ;7seg.c: 29: LATEbits.LATE1 = g;
   365  007B18  B002               	btfsc	setSegmentByBit@g,0,c
   366  007B1A  D002               	bra	u165
   367  007B1C  928D               	bcf	3981,1,c	;volatile
   368  007B1E  D001               	bra	u166
   369  007B20                     u165:
   370  007B20  828D               	bsf	3981,1,c	;volatile
   371  007B22                     u166:
   372                           
   373                           ;7seg.c: 30: LATEbits.LATE0 = d;
   374  007B22  B001               	btfsc	setSegmentByBit@d,0,c
   375  007B24  D002               	bra	u175
   376  007B26  908D               	bcf	3981,0,c	;volatile
   377  007B28  D001               	bra	u176
   378  007B2A                     u175:
   379  007B2A  808D               	bsf	3981,0,c	;volatile
   380  007B2C                     u176:
   381                           
   382                           ;7seg.c: 31: LATEbits.LATE2 = a;
   383  007B2C  B003               	btfsc	setSegmentByBit@a,0,c
   384  007B2E  D002               	bra	u185
   385  007B30  948D               	bcf	3981,2,c	;volatile
   386  007B32  D001               	bra	u186
   387  007B34                     u185:
   388  007B34  848D               	bsf	3981,2,c	;volatile
   389  007B36                     u186:
   390  007B36  0012               	return		;funcret
   391  007B38                     __end_of_setSegmentByBit:
   392                           	opt stack 0
   393                           tblptru	equ	0xFF8
   394                           status	equ	0xFD8
   395                           
   396 ;; *************** function _init *****************
   397 ;; Defined at:
   398 ;;		line 22 in file "../eLock.X/init.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;		None               void
   405 ;; Registers used:
   406 ;;		wreg, status,2
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   412 ;;      Params:         0       0       0       0       0       0       0       0       0
   413 ;;      Locals:         0       0       0       0       0       0       0       0       0
   414 ;;      Temps:          0       0       0       0       0       0       0       0       0
   415 ;;      Totals:         0       0       0       0       0       0       0       0       0
   416 ;;Total ram usage:        0 bytes
   417 ;; Hardware stack levels used:    1
   418 ;; This function calls:
   419 ;;		Nothing
   420 ;; This function is called by:
   421 ;;		_main
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           	psect	text3
   426  007B38                     __ptext3:
   427                           	opt stack 0
   428  007B38                     _init:
   429                           	opt stack 30
   430                           
   431                           ;init.c: 24: ADCON0bits.GO = 0;
   432                           
   433                           ;incstack = 0
   434  007B38  92C2               	bcf	4034,1,c	;volatile
   435                           
   436                           ;init.c: 25: ADCON0bits.ADON = 0;
   437  007B3A  90C2               	bcf	4034,0,c	;volatile
   438                           
   439                           ;init.c: 27: ADCON1 = 0x0F;
   440  007B3C  0E0F               	movlw	15
   441  007B3E  6EC1               	movwf	4033,c	;volatile
   442                           
   443                           ;init.c: 28: CMCON = 0x07;
   444  007B40  0E07               	movlw	7
   445  007B42  6EB4               	movwf	4020,c	;volatile
   446                           
   447                           ;init.c: 30: INTCON2 = 0;
   448  007B44  0E00               	movlw	0
   449  007B46  6EF1               	movwf	intcon2,c	;volatile
   450                           
   451                           ;init.c: 32: LATCbits.LATC1 = 0;
   452  007B48  928B               	bcf	3979,1,c	;volatile
   453                           
   454                           ;init.c: 33: TRISCbits.TRISC1 = 0;
   455  007B4A  9294               	bcf	3988,1,c	;volatile
   456                           
   457                           ;init.c: 36: LATEbits.LATE0 = 0;
   458  007B4C  908D               	bcf	3981,0,c	;volatile
   459                           
   460                           ;init.c: 37: LATEbits.LATE1 = 0;
   461  007B4E  928D               	bcf	3981,1,c	;volatile
   462                           
   463                           ;init.c: 38: LATEbits.LATE2 = 0;
   464  007B50  948D               	bcf	3981,2,c	;volatile
   465                           
   466                           ;init.c: 39: TRISEbits.TRISE0 = 0;
   467  007B52  9096               	bcf	3990,0,c	;volatile
   468                           
   469                           ;init.c: 40: TRISEbits.TRISE1 = 0;
   470  007B54  9296               	bcf	3990,1,c	;volatile
   471                           
   472                           ;init.c: 41: TRISEbits.TRISE2 = 0;
   473  007B56  9496               	bcf	3990,2,c	;volatile
   474                           
   475                           ;init.c: 44: LATCbits.LATC2 = 0;
   476  007B58  948B               	bcf	3979,2,c	;volatile
   477                           
   478                           ;init.c: 45: TRISCbits.TRISC2 = 0;
   479  007B5A  9494               	bcf	3988,2,c	;volatile
   480  007B5C  0012               	return		;funcret
   481  007B5E                     __end_of_init:
   482                           	opt stack 0
   483                           tblptru	equ	0xFF8
   484                           intcon2	equ	0xFF1
   485                           status	equ	0xFD8
   486                           
   487 ;; *************** function _delayInMs *****************
   488 ;; Defined at:
   489 ;;		line 15 in file "../eLock.X/common.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;  ms              2    8[COMRAM] int 
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  i               2   11[COMRAM] int 
   494 ;; Return value:  Size  Location     Type
   495 ;;		None               void
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   503 ;;      Params:         2       0       0       0       0       0       0       0       0
   504 ;;      Locals:         2       0       0       0       0       0       0       0       0
   505 ;;      Temps:          1       0       0       0       0       0       0       0       0
   506 ;;      Totals:         5       0       0       0       0       0       0       0       0
   507 ;;Total ram usage:        5 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; Hardware stack levels required when called:    1
   510 ;; This function calls:
   511 ;;		___awdiv
   512 ;; This function is called by:
   513 ;;		_main
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text4
   518  007C00                     __ptext4:
   519                           	opt stack 0
   520  007C00                     _delayInMs:
   521                           	opt stack 29
   522                           
   523                           ;common.c: 16: if (ms/10 > 1) {
   524                           
   525                           ;incstack = 0
   526  007C00  C009  F001         	movff	delayInMs@ms,___awdiv@dividend
   527  007C04  C00A  F002         	movff	delayInMs@ms+1,___awdiv@dividend+1
   528  007C08  0E00               	movlw	0
   529  007C0A  6E04               	movwf	___awdiv@divisor+1,c
   530  007C0C  0E0A               	movlw	10
   531  007C0E  6E03               	movwf	___awdiv@divisor,c
   532  007C10  EC3E  F03E         	call	___awdiv	;wreg free
   533  007C14  BE02               	btfsc	?___awdiv+1,7,c
   534  007C16  D02A               	goto	l868
   535  007C18  5002               	movf	?___awdiv+1,w,c
   536  007C1A  E104               	bnz	u250
   537  007C1C  0E02               	movlw	2
   538  007C1E  5C01               	subwf	?___awdiv,w,c
   539  007C20  A0D8               	btfss	status,0,c
   540  007C22  D024               	goto	l868
   541  007C24                     u250:
   542                           
   543                           ;common.c: 17: for (int i = 0; i < ms / 10; i++) {
   544  007C24  0E00               	movlw	0
   545  007C26  6E0D               	movwf	delayInMs@i+1,c
   546  007C28  0E00               	movlw	0
   547  007C2A  6E0C               	movwf	delayInMs@i,c
   548  007C2C  D00A               	goto	l866
   549  007C2E                     l862:
   550                           
   551                           ;common.c: 18: _delay((unsigned long)((10)*(8000000/4000.0)));
   552  007C2E  0E1A               	movlw	26
   553  007C30  6E0B               	movwf	??_delayInMs& (0+255),c
   554  007C32  0EF8               	movlw	248
   555  007C34                     u317:
   556  007C34  2EE8               	decfsz	wreg,f,c
   557  007C36  D7FE               	goto	u317
   558  007C38  2E0B               	decfsz	??_delayInMs& (0+255),f,c
   559  007C3A  D7FC               	goto	u317
   560  007C3C  D000               	nop2	
   561  007C3E  4A0C               	infsnz	delayInMs@i,f,c
   562  007C40  2A0D               	incf	delayInMs@i+1,f,c
   563  007C42                     l866:
   564  007C42  C009  F001         	movff	delayInMs@ms,___awdiv@dividend
   565  007C46  C00A  F002         	movff	delayInMs@ms+1,___awdiv@dividend+1
   566  007C4A  0E00               	movlw	0
   567  007C4C  6E04               	movwf	___awdiv@divisor+1,c
   568  007C4E  0E0A               	movlw	10
   569  007C50  6E03               	movwf	___awdiv@divisor,c
   570  007C52  EC3E  F03E         	call	___awdiv	;wreg free
   571  007C56  5001               	movf	?___awdiv,w,c
   572  007C58  5C0C               	subwf	delayInMs@i,w,c
   573  007C5A  500D               	movf	delayInMs@i+1,w,c
   574  007C5C  0A80               	xorlw	128
   575  007C5E  6E0B               	movwf	??_delayInMs& (0+255),c
   576  007C60  5002               	movf	?___awdiv+1,w,c
   577  007C62  0A80               	xorlw	128
   578  007C64  580B               	subwfb	??_delayInMs& (0+255),w,c
   579  007C66  B0D8               	btfsc	status,0,c
   580  007C68  0012               	return	
   581  007C6A  D7E1               	goto	l862
   582  007C6C                     l868:
   583                           
   584                           ;common.c: 21: _delay((unsigned long)((1)*(8000000/4000.0)));
   585  007C6C  0E03               	movlw	3
   586  007C6E  6E0B               	movwf	??_delayInMs& (0+255),c
   587  007C70  0E98               	movlw	152
   588  007C72                     u327:
   589  007C72  2EE8               	decfsz	wreg,f,c
   590  007C74  D7FE               	goto	u327
   591  007C76  2E0B               	decfsz	??_delayInMs& (0+255),f,c
   592  007C78  D7FC               	goto	u327
   593  007C7A  0012               	return	
   594  007C7C                     __end_of_delayInMs:
   595                           	opt stack 0
   596                           tblptru	equ	0xFF8
   597                           intcon2	equ	0xFF1
   598                           wreg	equ	0xFE8
   599                           status	equ	0xFD8
   600                           
   601 ;; *************** function ___awdiv *****************
   602 ;; Defined at:
   603 ;;		line 8 in file "C:\data\apps\xc8\v1.35\sources\common\awdiv.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  dividend        2    0[COMRAM] int 
   606 ;;  divisor         2    2[COMRAM] int 
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  quotient        2    6[COMRAM] int 
   609 ;;  sign            1    5[COMRAM] unsigned char 
   610 ;;  counter         1    4[COMRAM] unsigned char 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  2    0[COMRAM] int 
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   620 ;;      Params:         4       0       0       0       0       0       0       0       0
   621 ;;      Locals:         4       0       0       0       0       0       0       0       0
   622 ;;      Temps:          0       0       0       0       0       0       0       0       0
   623 ;;      Totals:         8       0       0       0       0       0       0       0       0
   624 ;;Total ram usage:        8 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; This function calls:
   627 ;;		Nothing
   628 ;; This function is called by:
   629 ;;		_delayInMs
   630 ;;		_delayInUs
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text5
   635  007C7C                     __ptext5:
   636                           	opt stack 0
   637  007C7C                     ___awdiv:
   638                           	opt stack 29
   639                           
   640                           ;incstack = 0
   641  007C7C  0E00               	movlw	0
   642  007C7E  6E06               	movwf	___awdiv@sign,c
   643  007C80  AE04               	btfss	___awdiv@divisor+1,7,c
   644  007C82  D006               	goto	l822
   645  007C84  6C03               	negf	___awdiv@divisor,c
   646  007C86  1E04               	comf	___awdiv@divisor+1,f,c
   647  007C88  B0D8               	btfsc	status,0,c
   648  007C8A  2A04               	incf	___awdiv@divisor+1,f,c
   649  007C8C  0E01               	movlw	1
   650  007C8E  6E06               	movwf	___awdiv@sign,c
   651  007C90                     l822:
   652  007C90  AE02               	btfss	___awdiv@dividend+1,7,c
   653  007C92  D006               	goto	l828
   654  007C94  6C01               	negf	___awdiv@dividend,c
   655  007C96  1E02               	comf	___awdiv@dividend+1,f,c
   656  007C98  B0D8               	btfsc	status,0,c
   657  007C9A  2A02               	incf	___awdiv@dividend+1,f,c
   658  007C9C  0E01               	movlw	1
   659  007C9E  1A06               	xorwf	___awdiv@sign,f,c
   660  007CA0                     l828:
   661  007CA0  0E00               	movlw	0
   662  007CA2  6E08               	movwf	___awdiv@quotient+1,c
   663  007CA4  0E00               	movlw	0
   664  007CA6  6E07               	movwf	___awdiv@quotient,c
   665  007CA8  5003               	movf	___awdiv@divisor,w,c
   666  007CAA  1004               	iorwf	___awdiv@divisor+1,w,c
   667  007CAC  B4D8               	btfsc	status,2,c
   668  007CAE  D01C               	goto	l850
   669  007CB0  0E01               	movlw	1
   670  007CB2  6E05               	movwf	___awdiv@counter,c
   671  007CB4  D004               	goto	l836
   672  007CB6                     l834:
   673  007CB6  90D8               	bcf	status,0,c
   674  007CB8  3603               	rlcf	___awdiv@divisor,f,c
   675  007CBA  3604               	rlcf	___awdiv@divisor+1,f,c
   676  007CBC  2A05               	incf	___awdiv@counter,f,c
   677  007CBE                     l836:
   678  007CBE  AE04               	btfss	___awdiv@divisor+1,7,c
   679  007CC0  D7FA               	goto	l834
   680  007CC2                     l838:
   681  007CC2  90D8               	bcf	status,0,c
   682  007CC4  3607               	rlcf	___awdiv@quotient,f,c
   683  007CC6  3608               	rlcf	___awdiv@quotient+1,f,c
   684  007CC8  5003               	movf	___awdiv@divisor,w,c
   685  007CCA  5C01               	subwf	___awdiv@dividend,w,c
   686  007CCC  5004               	movf	___awdiv@divisor+1,w,c
   687  007CCE  5802               	subwfb	___awdiv@dividend+1,w,c
   688  007CD0  A0D8               	btfss	status,0,c
   689  007CD2  D005               	goto	l846
   690  007CD4  5003               	movf	___awdiv@divisor,w,c
   691  007CD6  5E01               	subwf	___awdiv@dividend,f,c
   692  007CD8  5004               	movf	___awdiv@divisor+1,w,c
   693  007CDA  5A02               	subwfb	___awdiv@dividend+1,f,c
   694  007CDC  8007               	bsf	___awdiv@quotient,0,c
   695  007CDE                     l846:
   696  007CDE  90D8               	bcf	status,0,c
   697  007CE0  3204               	rrcf	___awdiv@divisor+1,f,c
   698  007CE2  3203               	rrcf	___awdiv@divisor,f,c
   699  007CE4  2E05               	decfsz	___awdiv@counter,f,c
   700  007CE6  D7ED               	goto	l838
   701  007CE8                     l850:
   702  007CE8  5006               	movf	___awdiv@sign,w,c
   703  007CEA  B4D8               	btfsc	status,2,c
   704  007CEC  D004               	goto	l854
   705  007CEE  6C07               	negf	___awdiv@quotient,c
   706  007CF0  1E08               	comf	___awdiv@quotient+1,f,c
   707  007CF2  B0D8               	btfsc	status,0,c
   708  007CF4  2A08               	incf	___awdiv@quotient+1,f,c
   709  007CF6                     l854:
   710  007CF6  C007  F001         	movff	___awdiv@quotient,?___awdiv
   711  007CFA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   712  007CFE  0012               	return	
   713  007D00                     __end_of___awdiv:
   714                           	opt stack 0
   715  0000                     tblptru	equ	0xFF8
   716                           intcon2	equ	0xFF1
   717                           wreg	equ	0xFE8
   718                           status	equ	0xFD8
   719                           tblptru	equ	0xFF8
   720                           intcon2	equ	0xFF1
   721                           wreg	equ	0xFE8
   722                           status	equ	0xFD8
   723                           
   724                           	psect	rparam
   725  0000                     tblptru	equ	0xFF8
   726                           intcon2	equ	0xFF1
   727                           wreg	equ	0xFE8
   728                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delayInMs
    _setSevenSegment->_setSegmentByBit
    _delayInMs->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1298
                                             13 COMRAM     2     2      0
                          _delayInMs
                               _init
                    _setSevenSegment
 ---------------------------------------------------------------------------------
 (1) _setSevenSegment                                      4     2      2     475
                                              3 COMRAM     4     2      2
                    _setSegmentByBit
 ---------------------------------------------------------------------------------
 (2) _setSegmentByBit                                      3     1      2     410
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayInMs                                            5     3      2     755
                                              8 COMRAM     5     3      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     644
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delayInMs
     ___awdiv
   _init
   _setSevenSegment
     _setSegmentByBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      F       F       1       15.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BANK3               EF      0       0      10        0.0%
ABS                  0      0       0      11        0.0%
BITBANK3            EF      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat May 14 17:43:55 2022

            ___awdiv@sign 0006                       l900 7B62                       l822 7C90  
                     l902 7B6A                       l834 7CB6                       l850 7CE8  
                     l906 7B7A                       l836 7CBE                       l828 7CA0  
                     l854 7CF6                       l846 7CDE                       l838 7CC2  
                     l862 7C2E                       l872 7B9A                       l866 7C42  
                     l874 7BAA                       l882 7BDA                       l868 7C6C  
                     l876 7BBA                       l878 7BCA                       u250 7C24  
                     u317 7C34                       u165 7B20                       u166 7B22  
                     u327 7C72                       u175 7B2A                       u176 7B2C  
                     u185 7B34                       u186 7B36                       wreg 000FE8  
__size_of_setSegmentByBit 0022              __CFG_WDT$OFF 000000                      _main 7B5E  
                    _init 7B38                      start 0002             __CFG_IESO$OFF 000000  
            ___param_bank 000010                     ?_main 0001                     ?_init 0001  
         __end_of___awdiv 7D00                     _CMCON 000FB4           ___awdiv@divisor 0003  
         ___awdiv@counter 0005                     _RCSTA 000FAB                     _SPBRG 000FAF  
                   _TXSTA 000FAC            __CFG_FCMEN$OFF 000000                     main@i 000E  
__size_of_setSevenSegment 0068                     status 000FD8           __initialization 7B0C  
            __end_of_main 7B98              __end_of_init 7B5E                    ??_main 000E  
                  ??_init 0001             __activetblptr 000002                    _ADCON1 000FC1  
        ___awdiv@dividend 0001         ??_setSegmentByBit 0003                    _TRISC6 007CA6  
                  _TRISC7 007CA7                 ??___awdiv 0005          ___awdiv@quotient 0007  
                  tblptru 000FF8                __accesstop 0060   __end_of__initialization 7B0C  
           ___rparam_used 000001            __pcstackCOMRAM 0001         ??_setSevenSegment 0006  
      __size_of_delayInMs 007C                   _INTCON2 000FF1         __end_of_delayInMs 7C7C  
                 __Hparam 0000                   __Lparam 0000                   ___awdiv 7C7C  
                 __pcinit 7B0C                   __ramtop 0800                   __ptext0 7B5E  
                 __ptext1 7B98                   __ptext2 7B16                   __ptext3 7B38  
                 __ptext4 7C00                   __ptext5 7C7C           _setSegmentByBit 7B16  
              delayInMs@i 000C      end_of_initialization 7B0C             __Lmediumconst 0000  
               _TRISCbits 000F94                 _TRISEbits 000F96           _setSevenSegment 7B98  
 __end_of_setSegmentByBit 7B38       start_initialization 7B0C   __end_of_setSevenSegment 7C00  
               _delayInMs 7C00                  ?___awdiv 0001          ?_setSegmentByBit 0001  
                _LATCbits 000F8B                  _LATEbits 000F8D                ?_delayInMs 0009  
  setSevenSegment@display 0004                _ADCON0bits 000FC2          ?_setSevenSegment 0004  
                __Hrparam 0000                  __Lrparam 0000          __size_of___awdiv 0084  
   __CFG_FOSC$INTOSCIO_EC 000000             __size_of_main 003A             __size_of_init 0026  
             delayInMs@ms 0009               ??_delayInMs 000B          setSegmentByBit@a 0003  
        setSegmentByBit@d 0001          setSegmentByBit@g 0002  
