

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Apr 13 01:20:32 2022

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     _LATCbits	set	3979
    19  0000                     _TRISCbits	set	3988
    20  0000                     _TRISC6	set	31910
    21  0000                     _TRISC7	set	31911
    22  0000                     _RCREG	set	4014
    23  0000                     _RCSTA	set	4011
    24  0000                     _SPBRG	set	4015
    25  0000                     _TXREG	set	4013
    26  0000                     _TXSTA	set	4012
    27  0000                     _RCIF	set	31989
    28  0000                     _TXIF	set	31988
    29                           
    30                           	psect	smallconst
    31  000800                     __psmallconst:
    32                           	opt stack 0
    33  000800  00                 	db	0
    34  000801                     STR_3:
    35  000801  20                 	db	32
    36  000802  73                 	db	115	;'s'
    37  000803  65                 	db	101	;'e'
    38  000804  6C                 	db	108	;'l'
    39  000805  65                 	db	101	;'e'
    40  000806  63                 	db	99	;'c'
    41  000807  74                 	db	116	;'t'
    42  000808  20                 	db	32
    43  000809  31                 	db	49	;'1'
    44  00080A  20                 	db	32
    45  00080B  6F                 	db	111	;'o'
    46  00080C  72                 	db	114	;'r'
    47  00080D  20                 	db	32
    48  00080E  32                 	db	50	;'2'
    49  00080F  00                 	db	0
    50  000810                     STR_2:
    51  000810  4C                 	db	76	;'L'
    52  000811  45                 	db	69	;'E'
    53  000812  44                 	db	68	;'D'
    54  000813  5F                 	db	95	;'_'
    55  000814  4F                 	db	79	;'O'
    56  000815  46                 	db	70	;'F'
    57  000816  46                 	db	70	;'F'
    58  000817  00                 	db	0
    59  000818                     STR_1:
    60  000818  4C                 	db	76	;'L'
    61  000819  45                 	db	69	;'E'
    62  00081A  44                 	db	68	;'D'
    63  00081B  5F                 	db	95	;'_'
    64  00081C  4F                 	db	79	;'O'
    65  00081D  4E                 	db	78	;'N'
    66  00081E  00                 	db	0
    67                           
    68                           ; #config settings
    69  00081F  00                 	db	0	; dummy byte at the end
    70  0000                     
    71                           	psect	cinit
    72  0009BE                     __pcinit:
    73                           	opt stack 0
    74  0009BE                     start_initialization:
    75                           	opt stack 0
    76  0009BE                     __initialization:
    77                           	opt stack 0
    78  0009BE                     end_of_initialization:
    79                           	opt stack 0
    80  0009BE                     __end_of__initialization:
    81                           	opt stack 0
    82  0009BE  0E00               	movlw	low (__Lsmallconst shr (0+16))
    83  0009C0  6EF8               	movwf	tblptru,c
    84  0009C2  0E08               	movlw	high __Lsmallconst
    85  0009C4  6EF7               	movwf	tblptrh,c
    86  0009C6  0100               	movlb	0
    87  0009C8  EF90  F004         	goto	_main	;jump to C main() function
    88                           tblptru	equ	0xFF8
    89                           tblptrh	equ	0xFF7
    90                           
    91                           	psect	cstackCOMRAM
    92  000001                     __pcstackCOMRAM:
    93                           	opt stack 0
    94  000001                     ?___awdiv:
    95                           	opt stack 0
    96  000001                     sendCharacter@c:
    97                           	opt stack 0
    98  000001                     ___awdiv@dividend:
    99                           	opt stack 0
   100                           
   101                           ; 2 bytes @ 0x0
   102  000001                     	ds	1
   103  000002                     sendString@out:
   104                           	opt stack 0
   105                           
   106                           ; 2 bytes @ 0x1
   107  000002                     	ds	1
   108  000003                     ___awdiv@divisor:
   109                           	opt stack 0
   110                           
   111                           ; 2 bytes @ 0x2
   112  000003                     	ds	1
   113  000004                     
   114                           ; 0 bytes @ 0x3
   115  000004                     	ds	1
   116  000005                     ___awdiv@counter:
   117                           	opt stack 0
   118                           
   119                           ; 1 bytes @ 0x4
   120  000005                     	ds	1
   121  000006                     ___awdiv@sign:
   122                           	opt stack 0
   123                           
   124                           ; 1 bytes @ 0x5
   125  000006                     	ds	1
   126  000007                     ___awdiv@quotient:
   127                           	opt stack 0
   128                           
   129                           ; 2 bytes @ 0x6
   130  000007                     	ds	2
   131  000009                     delayInMs@ms:
   132                           	opt stack 0
   133                           
   134                           ; 2 bytes @ 0x8
   135  000009                     	ds	2
   136  00000B                     ??_delayInMs:
   137                           
   138                           ; 0 bytes @ 0xA
   139  00000B                     	ds	1
   140  00000C                     delayInMs@i:
   141                           	opt stack 0
   142                           
   143                           ; 2 bytes @ 0xB
   144  00000C                     	ds	2
   145  00000E                     main@data_in:
   146                           	opt stack 0
   147                           
   148                           ; 1 bytes @ 0xD
   149  00000E                     	ds	1
   150                           tblptru	equ	0xFF8
   151                           tblptrh	equ	0xFF7
   152                           
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   155 ;;
   156 ;; *************** function _main *****************
   157 ;; Defined at:
   158 ;;		line 14 in file "main.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;  data_in         1   13[COMRAM] unsigned char 
   163 ;; Return value:  Size  Location     Type
   164 ;;		None               void
   165 ;; Registers used:
   166 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   167 ;; Tracked objects:
   168 ;;		On entry : 0/0
   169 ;;		On exit  : 0/0
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   172 ;;      Params:         0       0       0       0       0       0       0       0       0
   173 ;;      Locals:         1       0       0       0       0       0       0       0       0
   174 ;;      Temps:          0       0       0       0       0       0       0       0       0
   175 ;;      Totals:         1       0       0       0       0       0       0       0       0
   176 ;;Total ram usage:        1 bytes
   177 ;; Hardware stack levels required when called:    2
   178 ;; This function calls:
   179 ;;		_delayInMs
   180 ;;		_init
   181 ;;		_receiveChar
   182 ;;		_sendString
   183 ;; This function is called by:
   184 ;;		Startup code after reset
   185 ;; This function uses a non-reentrant model
   186 ;;
   187                           
   188                           	psect	text0
   189  000920                     __ptext0:
   190                           	opt stack 0
   191  000920                     _main:
   192                           	opt stack 29
   193                           
   194                           ;main.c: 15: init();
   195                           
   196                           ;incstack = 0
   197  000920  ECF0  F004         	call	_init	;wreg free
   198                           
   199                           ;main.c: 17: char data_in;
   200                           ;main.c: 18: LATCbits.LATC2 = 0;
   201  000924  948B               	bcf	3979,2,c	;volatile
   202                           
   203                           ;main.c: 20: delayInMs(50);
   204  000926  0E00               	movlw	0
   205  000928  6E0A               	movwf	delayInMs@ms+1,c
   206  00092A  0E32               	movlw	50
   207  00092C  6E09               	movwf	delayInMs@ms,c
   208  00092E  EC52  F004         	call	_delayInMs	;wreg free
   209  000932                     l892:
   210                           
   211                           ;main.c: 22: data_in = receiveChar();
   212  000932  ECEC  F004         	call	_receiveChar	;wreg free
   213  000936  6E0E               	movwf	main@data_in,c
   214                           
   215                           ;main.c: 23: if (data_in == '1') {
   216  000938  0E31               	movlw	49
   217  00093A  180E               	xorwf	main@data_in,w,c
   218  00093C  A4D8               	btfss	status,2,c
   219  00093E  D008               	goto	l900
   220                           
   221                           ;main.c: 24: LATCbits.LATC2 = 0;
   222  000940  948B               	bcf	3979,2,c	;volatile
   223                           
   224                           ;main.c: 25: sendString("LED_ON");
   225  000942  0E18               	movlw	low STR_1
   226  000944  6E02               	movwf	sendString@out,c
   227  000946  0E08               	movlw	high STR_1
   228  000948  6E03               	movwf	sendString@out+1,c
   229  00094A  ECC1  F004         	call	_sendString	;wreg free
   230                           
   231                           ;main.c: 26: } else if (data_in == '2') {
   232  00094E  D012               	goto	l908
   233  000950                     l900:
   234  000950  0E32               	movlw	50
   235  000952  180E               	xorwf	main@data_in,w,c
   236  000954  A4D8               	btfss	status,2,c
   237  000956  D008               	goto	l906
   238                           
   239                           ;main.c: 27: LATCbits.LATC2 = 1;
   240  000958  848B               	bsf	3979,2,c	;volatile
   241                           
   242                           ;main.c: 28: sendString("LED_OFF");
   243  00095A  0E10               	movlw	low STR_2
   244  00095C  6E02               	movwf	sendString@out,c
   245  00095E  0E08               	movlw	high STR_2
   246  000960  6E03               	movwf	sendString@out+1,c
   247  000962  ECC1  F004         	call	_sendString	;wreg free
   248                           
   249                           ;main.c: 29: } else {
   250  000966  D006               	goto	l908
   251  000968                     l906:
   252                           
   253                           ;main.c: 30: sendString(" select 1 or 2");
   254  000968  0E01               	movlw	low STR_3
   255  00096A  6E02               	movwf	sendString@out,c
   256  00096C  0E08               	movlw	high STR_3
   257  00096E  6E03               	movwf	sendString@out+1,c
   258  000970  ECC1  F004         	call	_sendString	;wreg free
   259  000974                     l908:
   260                           
   261                           ;main.c: 31: }
   262                           ;main.c: 32: delayInMs(100);
   263  000974  0E00               	movlw	0
   264  000976  6E0A               	movwf	delayInMs@ms+1,c
   265  000978  0E64               	movlw	100
   266  00097A  6E09               	movwf	delayInMs@ms,c
   267  00097C  EC52  F004         	call	_delayInMs	;wreg free
   268  000980  D7D8               	goto	l892
   269  000982                     __end_of_main:
   270                           	opt stack 0
   271                           tblptru	equ	0xFF8
   272                           tblptrh	equ	0xFF7
   273                           status	equ	0xFD8
   274                           
   275 ;; *************** function _sendString *****************
   276 ;; Defined at:
   277 ;;		line 17 in file "../eLock.X/bluetooth.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;  out             2    1[COMRAM] PTR const unsigned char 
   280 ;;		 -> STR_3(15), STR_2(8), STR_1(7), 
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;		None               void
   285 ;; Registers used:
   286 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : 0/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   292 ;;      Params:         2       0       0       0       0       0       0       0       0
   293 ;;      Locals:         0       0       0       0       0       0       0       0       0
   294 ;;      Temps:          0       0       0       0       0       0       0       0       0
   295 ;;      Totals:         2       0       0       0       0       0       0       0       0
   296 ;;Total ram usage:        2 bytes
   297 ;; Hardware stack levels used:    1
   298 ;; Hardware stack levels required when called:    1
   299 ;; This function calls:
   300 ;;		_sendCharacter
   301 ;; This function is called by:
   302 ;;		_main
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           	psect	text1
   307  000982                     __ptext1:
   308                           	opt stack 0
   309  000982                     _sendString:
   310                           	opt stack 29
   311                           
   312                           ;bluetooth.c: 18: while (*out!='\0') {
   313                           
   314                           ;incstack = 0
   315  000982  D00A               	goto	l874
   316  000984                     l870:
   317                           
   318                           ;bluetooth.c: 19: sendCharacter(*out);
   319  000984  C002  FFF6         	movff	sendString@out,tblptrl
   320  000988  C003  FFF7         	movff	sendString@out+1,tblptrh
   321  00098C                     	if	0	;tblptru may be non-zero
   322  00098C                     	endif
   323  00098C                     	if	0	;tblptru may be non-zero
   324  00098C                     	endif
   325  00098C  0008               	tblrd		*
   326  00098E  50F5               	movf	tablat,w,c
   327  000990  ECE6  F004         	call	_sendCharacter
   328                           
   329                           ;bluetooth.c: 20: out++;
   330  000994  4A02               	infsnz	sendString@out,f,c
   331  000996  2A03               	incf	sendString@out+1,f,c
   332  000998                     l874:
   333  000998  C002  FFF6         	movff	sendString@out,tblptrl
   334  00099C  C003  FFF7         	movff	sendString@out+1,tblptrh
   335  0009A0                     	if	0	;tblptru may be non-zero
   336  0009A0                     	endif
   337  0009A0                     	if	0	;tblptru may be non-zero
   338  0009A0                     	endif
   339  0009A0  0008               	tblrd		*
   340  0009A2  50F5               	movf	tablat,w,c
   341  0009A4  0900               	iorlw	0
   342  0009A6  B4D8               	btfsc	status,2,c
   343  0009A8  0012               	return	
   344  0009AA  D7EC               	goto	l870
   345  0009AC                     __end_of_sendString:
   346                           	opt stack 0
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           status	equ	0xFD8
   352                           
   353 ;; *************** function _sendCharacter *****************
   354 ;; Defined at:
   355 ;;		line 12 in file "../eLock.X/bluetooth.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;  c               1    wreg     unsigned char 
   358 ;; Auto vars:     Size  Location     Type
   359 ;;  c               1    0[COMRAM] unsigned char 
   360 ;; Return value:  Size  Location     Type
   361 ;;		None               void
   362 ;; Registers used:
   363 ;;		wreg
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   369 ;;      Params:         0       0       0       0       0       0       0       0       0
   370 ;;      Locals:         1       0       0       0       0       0       0       0       0
   371 ;;      Temps:          0       0       0       0       0       0       0       0       0
   372 ;;      Totals:         1       0       0       0       0       0       0       0       0
   373 ;;Total ram usage:        1 bytes
   374 ;; Hardware stack levels used:    1
   375 ;; This function calls:
   376 ;;		Nothing
   377 ;; This function is called by:
   378 ;;		_sendString
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           	psect	text2
   383  0009CC                     __ptext2:
   384                           	opt stack 0
   385  0009CC                     _sendCharacter:
   386                           	opt stack 29
   387                           
   388                           ;incstack = 0
   389                           ;sendCharacter@c stored from wreg
   390  0009CC  6E01               	movwf	sendCharacter@c,c
   391  0009CE                     l67:
   392  0009CE  A89E               	btfss	3998,4,c	;volatile
   393  0009D0  D7FE               	goto	l67
   394                           
   395                           ;bluetooth.c: 14: TXREG = c;
   396  0009D2  C001  FFAD         	movff	sendCharacter@c,4013	;volatile
   397  0009D6  0012               	return		;funcret
   398  0009D8                     __end_of_sendCharacter:
   399                           	opt stack 0
   400                           tblptru	equ	0xFF8
   401                           tblptrh	equ	0xFF7
   402                           tblptrl	equ	0xFF6
   403                           tablat	equ	0xFF5
   404                           status	equ	0xFD8
   405                           
   406 ;; *************** function _receiveChar *****************
   407 ;; Defined at:
   408 ;;		line 24 in file "../eLock.X/bluetooth.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      unsigned char 
   415 ;; Registers used:
   416 ;;		wreg, status,2
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   422 ;;      Params:         0       0       0       0       0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0       0       0       0       0
   425 ;;      Totals:         0       0       0       0       0       0       0       0       0
   426 ;;Total ram usage:        0 bytes
   427 ;; Hardware stack levels used:    1
   428 ;; This function calls:
   429 ;;		Nothing
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           	psect	text3
   436  0009D8                     __ptext3:
   437                           	opt stack 0
   438  0009D8                     _receiveChar:
   439                           	opt stack 30
   440  0009D8                     l79:
   441  0009D8  AA9E               	btfss	3998,5,c	;volatile
   442  0009DA  D7FE               	goto	l79
   443                           
   444                           ;bluetooth.c: 26: return RCREG;
   445  0009DC  50AE               	movf	4014,w,c	;volatile
   446  0009DE  0012               	return	
   447  0009E0                     __end_of_receiveChar:
   448                           	opt stack 0
   449                           tblptru	equ	0xFF8
   450                           tblptrh	equ	0xFF7
   451                           tblptrl	equ	0xFF6
   452                           tablat	equ	0xFF5
   453                           status	equ	0xFD8
   454                           
   455 ;; *************** function _init *****************
   456 ;; Defined at:
   457 ;;		line 22 in file "../eLock.X/init.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;		None
   462 ;; Return value:  Size  Location     Type
   463 ;;		None               void
   464 ;; Registers used:
   465 ;;		wreg, status,2, cstack
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   471 ;;      Params:         0       0       0       0       0       0       0       0       0
   472 ;;      Locals:         0       0       0       0       0       0       0       0       0
   473 ;;      Temps:          0       0       0       0       0       0       0       0       0
   474 ;;      Totals:         0       0       0       0       0       0       0       0       0
   475 ;;Total ram usage:        0 bytes
   476 ;; Hardware stack levels used:    1
   477 ;; Hardware stack levels required when called:    1
   478 ;; This function calls:
   479 ;;		_init_usart
   480 ;; This function is called by:
   481 ;;		_main
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           	psect	text4
   486  0009E0                     __ptext4:
   487                           	opt stack 0
   488  0009E0                     _init:
   489                           	opt stack 29
   490                           
   491                           ;init.c: 23: init_usart();
   492                           
   493                           ;incstack = 0
   494  0009E0  ECD6  F004         	call	_init_usart	;wreg free
   495                           
   496                           ;init.c: 24: TRISCbits.TRISC2 = 0;
   497  0009E4  9494               	bcf	3988,2,c	;volatile
   498  0009E6  0012               	return		;funcret
   499  0009E8                     __end_of_init:
   500                           	opt stack 0
   501                           tblptru	equ	0xFF8
   502                           tblptrh	equ	0xFF7
   503                           tblptrl	equ	0xFF6
   504                           tablat	equ	0xFF5
   505                           status	equ	0xFD8
   506                           
   507 ;; *************** function _init_usart *****************
   508 ;; Defined at:
   509 ;;		line 14 in file "../eLock.X/init.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;		None               void
   516 ;; Registers used:
   517 ;;		wreg, status,2
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   523 ;;      Params:         0       0       0       0       0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0       0       0       0       0
   526 ;;      Totals:         0       0       0       0       0       0       0       0       0
   527 ;;Total ram usage:        0 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; This function calls:
   530 ;;		Nothing
   531 ;; This function is called by:
   532 ;;		_init
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text5
   537  0009AC                     __ptext5:
   538                           	opt stack 0
   539  0009AC                     _init_usart:
   540                           	opt stack 29
   541                           
   542                           ;init.c: 15: TRISC6=0;
   543                           
   544                           ;incstack = 0
   545  0009AC  9C94               	bcf	3988,6,c	;volatile
   546                           
   547                           ;init.c: 16: TRISC7=1;
   548  0009AE  8E94               	bsf	3988,7,c	;volatile
   549                           
   550                           ;init.c: 17: SPBRG=(int)(((float)(8000000/64)/(float)9600)-1);
   551  0009B0  0E0C               	movlw	12
   552  0009B2  6EAF               	movwf	4015,c	;volatile
   553                           
   554                           ;init.c: 18: TXSTA=0x20;
   555  0009B4  0E20               	movlw	32
   556  0009B6  6EAC               	movwf	4012,c	;volatile
   557                           
   558                           ;init.c: 19: RCSTA=0x90;
   559  0009B8  0E90               	movlw	144
   560  0009BA  6EAB               	movwf	4011,c	;volatile
   561  0009BC  0012               	return		;funcret
   562  0009BE                     __end_of_init_usart:
   563                           	opt stack 0
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           status	equ	0xFD8
   569                           
   570 ;; *************** function _delayInMs *****************
   571 ;; Defined at:
   572 ;;		line 15 in file "../eLock.X/common.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  ms              2    8[COMRAM] int 
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  i               2   11[COMRAM] int 
   577 ;; Return value:  Size  Location     Type
   578 ;;		None               void
   579 ;; Registers used:
   580 ;;		wreg, status,2, status,0, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   586 ;;      Params:         2       0       0       0       0       0       0       0       0
   587 ;;      Locals:         2       0       0       0       0       0       0       0       0
   588 ;;      Temps:          1       0       0       0       0       0       0       0       0
   589 ;;      Totals:         5       0       0       0       0       0       0       0       0
   590 ;;Total ram usage:        5 bytes
   591 ;; Hardware stack levels used:    1
   592 ;; Hardware stack levels required when called:    1
   593 ;; This function calls:
   594 ;;		___awdiv
   595 ;; This function is called by:
   596 ;;		_main
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           	psect	text6
   601  0008A4                     __ptext6:
   602                           	opt stack 0
   603  0008A4                     _delayInMs:
   604                           	opt stack 29
   605                           
   606                           ;common.c: 16: if (ms/10 > 1) {
   607                           
   608                           ;incstack = 0
   609  0008A4  C009  F001         	movff	delayInMs@ms,___awdiv@dividend
   610  0008A8  C00A  F002         	movff	delayInMs@ms+1,___awdiv@dividend+1
   611  0008AC  0E00               	movlw	0
   612  0008AE  6E04               	movwf	___awdiv@divisor+1,c
   613  0008B0  0E0A               	movlw	10
   614  0008B2  6E03               	movwf	___awdiv@divisor,c
   615  0008B4  EC10  F004         	call	___awdiv	;wreg free
   616  0008B8  BE02               	btfsc	?___awdiv+1,7,c
   617  0008BA  D02A               	goto	l866
   618  0008BC  5002               	movf	?___awdiv+1,w,c
   619  0008BE  E104               	bnz	u220
   620  0008C0  0E02               	movlw	2
   621  0008C2  5C01               	subwf	?___awdiv,w,c
   622  0008C4  A0D8               	btfss	status,0,c
   623  0008C6  D024               	goto	l866
   624  0008C8                     u220:
   625                           
   626                           ;common.c: 17: for (int i = 0; i < ms / 10; i++) {
   627  0008C8  0E00               	movlw	0
   628  0008CA  6E0D               	movwf	delayInMs@i+1,c
   629  0008CC  0E00               	movlw	0
   630  0008CE  6E0C               	movwf	delayInMs@i,c
   631  0008D0  D00A               	goto	l864
   632  0008D2                     l860:
   633                           
   634                           ;common.c: 18: _delay((unsigned long)((10)*(8000000/4000.0)));
   635  0008D2  0E1A               	movlw	26
   636  0008D4  6E0B               	movwf	??_delayInMs& (0+255),c
   637  0008D6  0EF8               	movlw	248
   638  0008D8                     u297:
   639  0008D8  2EE8               	decfsz	wreg,f,c
   640  0008DA  D7FE               	goto	u297
   641  0008DC  2E0B               	decfsz	??_delayInMs& (0+255),f,c
   642  0008DE  D7FC               	goto	u297
   643  0008E0  D000               	nop2	
   644  0008E2  4A0C               	infsnz	delayInMs@i,f,c
   645  0008E4  2A0D               	incf	delayInMs@i+1,f,c
   646  0008E6                     l864:
   647  0008E6  C009  F001         	movff	delayInMs@ms,___awdiv@dividend
   648  0008EA  C00A  F002         	movff	delayInMs@ms+1,___awdiv@dividend+1
   649  0008EE  0E00               	movlw	0
   650  0008F0  6E04               	movwf	___awdiv@divisor+1,c
   651  0008F2  0E0A               	movlw	10
   652  0008F4  6E03               	movwf	___awdiv@divisor,c
   653  0008F6  EC10  F004         	call	___awdiv	;wreg free
   654  0008FA  5001               	movf	?___awdiv,w,c
   655  0008FC  5C0C               	subwf	delayInMs@i,w,c
   656  0008FE  500D               	movf	delayInMs@i+1,w,c
   657  000900  0A80               	xorlw	128
   658  000902  6E0B               	movwf	??_delayInMs& (0+255),c
   659  000904  5002               	movf	?___awdiv+1,w,c
   660  000906  0A80               	xorlw	128
   661  000908  580B               	subwfb	??_delayInMs& (0+255),w,c
   662  00090A  B0D8               	btfsc	status,0,c
   663  00090C  0012               	return	
   664  00090E  D7E1               	goto	l860
   665  000910                     l866:
   666                           
   667                           ;common.c: 21: _delay((unsigned long)((1)*(8000000/4000.0)));
   668  000910  0E03               	movlw	3
   669  000912  6E0B               	movwf	??_delayInMs& (0+255),c
   670  000914  0E98               	movlw	152
   671  000916                     u307:
   672  000916  2EE8               	decfsz	wreg,f,c
   673  000918  D7FE               	goto	u307
   674  00091A  2E0B               	decfsz	??_delayInMs& (0+255),f,c
   675  00091C  D7FC               	goto	u307
   676  00091E  0012               	return	
   677  000920                     __end_of_delayInMs:
   678                           	opt stack 0
   679                           tblptru	equ	0xFF8
   680                           tblptrh	equ	0xFF7
   681                           tblptrl	equ	0xFF6
   682                           tablat	equ	0xFF5
   683                           wreg	equ	0xFE8
   684                           status	equ	0xFD8
   685                           
   686 ;; *************** function ___awdiv *****************
   687 ;; Defined at:
   688 ;;		line 8 in file "C:\data\apps\xc8\v1.35\sources\common\awdiv.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  dividend        2    0[COMRAM] int 
   691 ;;  divisor         2    2[COMRAM] int 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  quotient        2    6[COMRAM] int 
   694 ;;  sign            1    5[COMRAM] unsigned char 
   695 ;;  counter         1    4[COMRAM] unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  2    0[COMRAM] int 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   705 ;;      Params:         4       0       0       0       0       0       0       0       0
   706 ;;      Locals:         4       0       0       0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0
   708 ;;      Totals:         8       0       0       0       0       0       0       0       0
   709 ;;Total ram usage:        8 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_delayInMs
   715 ;;		_delayInUs
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text7
   720  000820                     __ptext7:
   721                           	opt stack 0
   722  000820                     ___awdiv:
   723                           	opt stack 29
   724                           
   725                           ;incstack = 0
   726  000820  0E00               	movlw	0
   727  000822  6E06               	movwf	___awdiv@sign,c
   728  000824  AE04               	btfss	___awdiv@divisor+1,7,c
   729  000826  D006               	goto	l820
   730  000828  6C03               	negf	___awdiv@divisor,c
   731  00082A  1E04               	comf	___awdiv@divisor+1,f,c
   732  00082C  B0D8               	btfsc	status,0,c
   733  00082E  2A04               	incf	___awdiv@divisor+1,f,c
   734  000830  0E01               	movlw	1
   735  000832  6E06               	movwf	___awdiv@sign,c
   736  000834                     l820:
   737  000834  AE02               	btfss	___awdiv@dividend+1,7,c
   738  000836  D006               	goto	l826
   739  000838  6C01               	negf	___awdiv@dividend,c
   740  00083A  1E02               	comf	___awdiv@dividend+1,f,c
   741  00083C  B0D8               	btfsc	status,0,c
   742  00083E  2A02               	incf	___awdiv@dividend+1,f,c
   743  000840  0E01               	movlw	1
   744  000842  1A06               	xorwf	___awdiv@sign,f,c
   745  000844                     l826:
   746  000844  0E00               	movlw	0
   747  000846  6E08               	movwf	___awdiv@quotient+1,c
   748  000848  0E00               	movlw	0
   749  00084A  6E07               	movwf	___awdiv@quotient,c
   750  00084C  5003               	movf	___awdiv@divisor,w,c
   751  00084E  1004               	iorwf	___awdiv@divisor+1,w,c
   752  000850  B4D8               	btfsc	status,2,c
   753  000852  D01C               	goto	l848
   754  000854  0E01               	movlw	1
   755  000856  6E05               	movwf	___awdiv@counter,c
   756  000858  D004               	goto	l834
   757  00085A                     l832:
   758  00085A  90D8               	bcf	status,0,c
   759  00085C  3603               	rlcf	___awdiv@divisor,f,c
   760  00085E  3604               	rlcf	___awdiv@divisor+1,f,c
   761  000860  2A05               	incf	___awdiv@counter,f,c
   762  000862                     l834:
   763  000862  AE04               	btfss	___awdiv@divisor+1,7,c
   764  000864  D7FA               	goto	l832
   765  000866                     l836:
   766  000866  90D8               	bcf	status,0,c
   767  000868  3607               	rlcf	___awdiv@quotient,f,c
   768  00086A  3608               	rlcf	___awdiv@quotient+1,f,c
   769  00086C  5003               	movf	___awdiv@divisor,w,c
   770  00086E  5C01               	subwf	___awdiv@dividend,w,c
   771  000870  5004               	movf	___awdiv@divisor+1,w,c
   772  000872  5802               	subwfb	___awdiv@dividend+1,w,c
   773  000874  A0D8               	btfss	status,0,c
   774  000876  D005               	goto	l844
   775  000878  5003               	movf	___awdiv@divisor,w,c
   776  00087A  5E01               	subwf	___awdiv@dividend,f,c
   777  00087C  5004               	movf	___awdiv@divisor+1,w,c
   778  00087E  5A02               	subwfb	___awdiv@dividend+1,f,c
   779  000880  8007               	bsf	___awdiv@quotient,0,c
   780  000882                     l844:
   781  000882  90D8               	bcf	status,0,c
   782  000884  3204               	rrcf	___awdiv@divisor+1,f,c
   783  000886  3203               	rrcf	___awdiv@divisor,f,c
   784  000888  2E05               	decfsz	___awdiv@counter,f,c
   785  00088A  D7ED               	goto	l836
   786  00088C                     l848:
   787  00088C  5006               	movf	___awdiv@sign,w,c
   788  00088E  B4D8               	btfsc	status,2,c
   789  000890  D004               	goto	l852
   790  000892  6C07               	negf	___awdiv@quotient,c
   791  000894  1E08               	comf	___awdiv@quotient+1,f,c
   792  000896  B0D8               	btfsc	status,0,c
   793  000898  2A08               	incf	___awdiv@quotient+1,f,c
   794  00089A                     l852:
   795  00089A  C007  F001         	movff	___awdiv@quotient,?___awdiv
   796  00089E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   797  0008A2  0012               	return	
   798  0008A4                     __end_of___awdiv:
   799                           	opt stack 0
   800                           tblptru	equ	0xFF8
   801                           tblptrh	equ	0xFF7
   802                           tblptrl	equ	0xFF6
   803                           tablat	equ	0xFF5
   804                           wreg	equ	0xFE8
   805                           status	equ	0xFD8
   806                           tblptru	equ	0xFF8
   807                           tblptrh	equ	0xFF7
   808                           tblptrl	equ	0xFF6
   809                           tablat	equ	0xFF5
   810                           wreg	equ	0xFE8
   811                           status	equ	0xFD8
   812                           
   813                           	psect	rparam
   814  0000                     tblptru	equ	0xFF8
   815                           tblptrh	equ	0xFF7
   816                           tblptrl	equ	0xFF6
   817                           tablat	equ	0xFF5
   818                           wreg	equ	0xFE8
   819                           status	equ	0xFD8


Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sendString@out	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[8]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_delayInMs
    _sendString->_sendCharacter
    _delayInMs->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1305
                                             13 COMRAM     1     1      0
                          _delayInMs
                               _init
                        _receiveChar
                         _sendString
 ---------------------------------------------------------------------------------
 (1) _sendString                                           2     0      2     252
                                              1 COMRAM     2     0      2
                      _sendCharacter
 ---------------------------------------------------------------------------------
 (2) _sendCharacter                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _receiveChar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                         _init_usart
 ---------------------------------------------------------------------------------
 (2) _init_usart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayInMs                                            5     3      2    1008
                                              8 COMRAM     5     3      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     812
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delayInMs
     ___awdiv
   _init
     _init_usart
   _receiveChar
   _sendString
     _sendCharacter

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      E       E       1       14.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BANK3               EF      0       0      10        0.0%
ABS                  0      0       0      11        0.0%
BITBANK3            EF      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Apr 13 01:20:32 2022

                     l67 09CE                       l79 09D8             ___awdiv@sign 0006  
                    l820 0834                      l900 0950                      l832 085A  
                    l834 0862                      l826 0844                      l906 0968  
                    l852 089A                      l844 0882                      l836 0866  
                    l860 08D2                      l908 0974                      l870 0984  
                    l848 088C                      l864 08E6                      l866 0910  
                    l874 0998                      l892 0932                      u220 08C8  
                    u307 0916                      u297 08D8    __end_of_sendCharacter 09D8  
                    wreg 000FE8              main@data_in 000E             __CFG_WDT$OFF 000000  
                   STR_1 0818                     STR_2 0810                     STR_3 0801  
                   _RCIF 007CF5                     _TXIF 007CF4                     _main 0920  
                   _init 09E0                     start 0002            __CFG_IESO$OFF 000000  
           ___param_bank 000010                    ?_main 0001                    ?_init 0001  
        __end_of___awdiv 08A4          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _SPBRG 000FAF  
                  _TXREG 000FAD                    _TXSTA 000FAC           __CFG_FCMEN$OFF 000000  
                  tablat 000FF5                    status 000FD8             ?_receiveChar 0001  
        __initialization 09BE             __end_of_main 0982             __end_of_init 09E8  
                 ??_main 000E                   ??_init 0001            __activetblptr 000001  
       ___awdiv@dividend 0001                   _TRISC6 007CA6                   _TRISC7 007CA7  
              ??___awdiv 0005         ___awdiv@quotient 0007             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 09BE            ___rparam_used 000001  
         __pcstackCOMRAM 0001       __size_of_delayInMs 007C     __size_of_receiveChar 0008  
      __end_of_delayInMs 0920                  __Hparam 0000                  __Lparam 0000  
 __size_of_sendCharacter 000C                  ___awdiv 0820             __psmallconst 0800  
                __pcinit 09BE                  __ramtop 0800               _init_usart 09AC  
                __ptext0 0920                  __ptext1 0982                  __ptext2 09CC  
                __ptext3 09D8                  __ptext4 09E0                  __ptext5 09AC  
                __ptext6 08A4                  __ptext7 0820               delayInMs@i 000C  
   end_of_initialization 09BE               _sendString 0982            sendString@out 0002  
              _TRISCbits 000F94            _sendCharacter 09CC           sendCharacter@c 0001  
            ?_init_usart 0001           ?_sendCharacter 0001      start_initialization 09BE  
            ?_sendString 0002            ??_receiveChar 0001      __size_of_init_usart 0012  
              _delayInMs 08A4                 ?___awdiv 0001          ??_sendCharacter 0001  
    __size_of_sendString 002A              __smallconst 0800                 _LATCbits 000F8B  
             ?_delayInMs 0009      __end_of_receiveChar 09E0                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0800         __size_of___awdiv 0084  
           ??_init_usart 0001    __CFG_FOSC$INTOSCIO_EC 000000             ??_sendString 0004  
          __size_of_main 0062            __size_of_init 0008              _receiveChar 09D8  
            delayInMs@ms 0009       __end_of_init_usart 09BE              ??_delayInMs 000B  
     __end_of_sendString 09AC  
